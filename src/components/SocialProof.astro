---
interface Item { name: string; href: string; quote?: string; rating?: string; logoSrc?: string }
const { items = [], variant = 'strip' } = Astro.props as { items: Item[]; variant?: 'strip' | 'cards' };
---
{variant === 'strip' ? (
  <section class="py-8">
    <div class="container mx-auto px-6 max-w-6xl grid gap-4 sm:grid-cols-2 md:grid-cols-3">
      {items.map((it) => (
        <a href={it.href} target="_blank" rel="noopener noreferrer" class="glass p-4 rounded-lg flex items-center justify-between hover:bg-white/10 transition">
          <div class="flex items-center gap-3">
            {it.logoSrc ? <img src={it.logoSrc} alt={it.name} class="h-6 w-6 rounded" /> : <div class="h-6 w-6 rounded bg-white/10" />}
            <span class="text-sm text-slate-200 font-medium">{it.name}</span>
          </div>
          <span class="text-xs text-slate-400">View chat →</span>
        </a>
      ))}
    </div>
  </section>
) : (
  <section class="py-12">
    <div class="container mx-auto px-6 max-w-6xl grid gap-6 md:grid-cols-3">
      {items.map((it) => (
        <a href={it.href} target="_blank" rel="noopener noreferrer" class="glass p-6 rounded-xl hover:bg-white/10 transition block">
          <div class="flex items-center gap-3 mb-3">
            {it.logoSrc ? <img src={it.logoSrc} alt={it.name} class="h-7 w-7 rounded" /> : <div class="h-7 w-7 rounded bg-white/10" />}
            <div>
              <div class="text-slate-200 font-semibold">{it.name}</div>
              <div class="text-xs text-slate-400">{it.rating ?? 'Rating: pending'}</div>
            </div>
          </div>
          {it.quote ? (
            <p class="text-slate-300 text-sm">“{it.quote}”</p>
          ) : (
            <p class="text-slate-400 text-sm">Feedback link provided. Quote coming soon.</p>
          )}
          <div class="mt-4 text-xs text-brand-400">View chat →</div>
        </a>
      ))}
    </div>
  </section>
)}
---
interface Item { name: string; href: string; quote?: string; rating?: string; logoSrc?: string }
const { items = [], variant = 'strip' } = Astro.props as { items: Item[]; variant?: 'strip' | 'cards' };
---
{variant === 'strip' ? (
  <section class="py-8">
    <div class="container mx-auto px-6 max-w-6xl grid gap-4 sm:grid-cols-2 md:grid-cols-3">
      {items.map((it) => (
        <a href={it.href} target="_blank" rel="noopener noreferrer" class="glass p-4 rounded-lg flex items-center justify-between hover:bg-white/10 transition">
          <div class="flex items-center gap-3">
            {it.logoSrc ? <img src={it.logoSrc} alt={it.name} class="h-6 w-6 rounded" /> : <div class="h-6 w-6 rounded bg-white/10" />}
            <span class="text-sm text-slate-200 font-medium">{it.name}</span>
          </div>
          <span class="text-xs text-slate-400">View chat →</span>
        </a>
      ))}
    </div>
  </section>
) : (
  <section class="py-12">
    <div class="container mx-auto px-6 max-w-6xl grid gap-6 md:grid-cols-3">
      {items.map((it) => (
        <a href={it.href} target="_blank" rel="noopener noreferrer" class="glass p-6 rounded-xl hover:bg-white/10 transition block">
          <div class="flex items-center gap-3 mb-3">
            {it.logoSrc ? <img src={it.logoSrc} alt={it.name} class="h-7 w-7 rounded" /> : <div class="h-7 w-7 rounded bg-white/10" />}
            <div>
              <div class="text-slate-200 font-semibold">{it.name}</div>
              <div class="text-xs text-slate-400">{it.rating ?? 'Rating: pending'}</div>
            </div>
          </div>
          {it.quote ? (
            <p class="text-slate-300 text-sm">“{it.quote}”</p>
          ) : (
            <p class="text-slate-400 text-sm">Feedback link provided. Quote coming soon.</p>
          )}
          <div class="mt-4 text-xs text-brand-400">View chat →</div>
        </a>
      ))}
    </div>
  </section>
)}
